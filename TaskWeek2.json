{
	"info": {
		"_postman_id": "ee348bbf-8bfb-499a-a63d-5755d52e7fc8",
		"name": "TaskWeek2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13086636"
	},
	"item": [
		{
			"name": "Single User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"pm.test(\"Response time is less than 500ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"pm.test(\"Status code name has string\", () => {",
							"  pm.response.to.have.status(\"OK\");",
							"});",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{prod}}/api/users/4",
					"host": [
						"{{prod}}"
					],
					"path": [
						"api",
						"users",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Successful POST request\", () => {",
							"  pm.expect(pm.response.code).to.be.oneOf([200,201,202]);",
							"});",
							"pm.test(\"Response time is less than 500ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{prod}}/api/register",
					"host": [
						"{{prod}}"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Part",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check the active environment\", () => {",
							"  pm.expect(pm.environment.name).to.eql(\"Production\");",
							"});",
							"pm.test(\"Person is Morpheus\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.name).to.eql(\"morpheus\");",
							"  pm.expect(responseJson.job).to.eql(\"zion resident\");",
							"});",
							"pm.test(\"Response time is less than 500ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{prod}}/api/users/2",
					"host": [
						"{{prod}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update All",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check the active environment\", () => {",
							"  pm.expect(pm.environment.name).to.eql(\"Production\");",
							"});",
							"pm.test(\"Person is Fazztrack\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.name).to.eql(\"fazztrack\");",
							"  pm.expect(responseJson.job).to.eql(\"qa automation\");",
							"});",
							"pm.test(\"Response time is less than 500ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"fazztrack\",\n    \"job\": \"qa automation\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{prod}}/api/users/3",
					"host": [
						"{{prod}}"
					],
					"path": [
						"api",
						"users",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", () => {",
							"  pm.response.to.have.status(204);",
							"});",
							"pm.test(\"Status code name has string\", () => {",
							"  pm.response.to.have.status(\"No Content\");",
							"});",
							"pm.test(\"Response time is less than 500ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"pm.test(\"Check the active environment\", () => {",
							"  pm.expect(pm.environment.name).to.eql(\"Production\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{prod}}/api/users/2",
					"host": [
						"{{prod}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}